plugins {
    id 'java-library'
    id("io.qameta.allure") version '2.12.0'
    id("io.freefair.lombok") version '6.0.0-m2'
}

repositories {
    mavenCentral()
}

allure {
    report {
        version.set("2.30.0")
    }
    adapter {
        aspectjWeaver.set(true)
        allureJavaVersion.set("2.28.0")
        aspectjVersion.set("1.9.22.1")
        frameworks {
            junit5 {
                adapterVersion.set("2.29.0")
                enabled.set(true)
            }
        }
    }
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:7.7.3',
            'org.junit.jupiter:junit-jupiter:5.12.1',
            'org.slf4j:slf4j-simple:2.0.17',
            'com.github.javafaker:javafaker:1.0.2',
            'com.fasterxml.jackson.core:jackson-databind:2.18.2',
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.11',
            'org.assertj:assertj-core:3.27.3',
            'io.qameta.allure:allure-selenide:2.21.0',
            'io.rest-assured:rest-assured:5.5.5',
            "io.rest-assured:json-schema-validator:5.5.5",
            "io.qameta.allure:allure-rest-assured:2.21.0",
            'io.qameta.allure:allure-attachments:2.21.0'
    )
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}

task demoqa_test(type: Test) {
    useJUnitPlatform {
        includeTags("demoqa")
    }
}

task large_test(type: Test) {
    useJUnitPlatform {
        includeTags("large")
    }
}
task api_regress(type: Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}